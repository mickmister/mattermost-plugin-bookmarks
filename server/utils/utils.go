package utils

import (
	"bytes"
	"encoding/base32"
	"regexp"

	"github.com/jfrerich/mattermost-plugin-bookmarks/server/pluginapi"
	"github.com/mattermost/mattermost-server/v5/plugin"
	"github.com/pborman/uuid"
)

// GetPostIDFromLink extracts a PostID from a link
func GetPostIDFromLink(s string) string {
	r := regexp.MustCompile(`http:.*\/\w+\/\w+\/(\w+)`)
	if len(r.FindStringSubmatch(s)) == 2 {
		return r.FindStringSubmatch(s)[1]
	}
	return s
}

type API struct {
	plugin.API
}

const TitleFromPostLabel = "**`TFP`**"

func GetLegendText() string {
	text := "#### Legend\n"
	text += ":link: - Jump to the bookmarked post \n\n"
	text += TitleFromPostLabel + " (**T**ext**F**rom**P**ost) - Autogenerated label representing bookmarks without a user provided title.  Display text is generated from the bookmarked post message\n"
	text += "`label` - **_Italicized & Bolded text signifies the bookmark has a saved title_**\n\n"
	text += "***\n"
	return text
}

// getSiteURL returns the SiteURL from the config settings
func GetSiteURL(api pluginapi.API) string {
	return *api.GetConfig().ServiceSettings.SiteURL
}

var encoding = base32.NewEncoding("ybndrfg8ejkmcpqxot1uwisza345h769")

// NewID is a globally unique identifier.  It is a [A-Z0-9] string 26
// characters long.  It is a UUID version 4 Guid that is zbased32 encoded
// with the padding stripped off.
func NewID() string {
	var b bytes.Buffer
	encoder := base32.NewEncoder(encoding, &b)
	_, _ = encoder.Write(uuid.NewRandom())
	encoder.Close()
	b.Truncate(26) // removes the '==' padding
	return b.String()
}
